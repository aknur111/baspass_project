"""Add cascade on delete to auth_2f

Revision ID: 25ab2149b76e
Revises: 2f291a14d933
Create Date: 2025-07-29 09:20:11.787609

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '25ab2149b76e'
down_revision: Union[str, None] = '2f291a14d933'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('auth_2f')
    # ### end Alembic commands ###

        op.drop_constraint('auth_2f_user_id_fkey', 'auth_2f', type_='foreignkey')
        op.create_foreign_key(
            'auth_2f_user_id_fkey',
            'auth_2f', 'users',
            ['user_id'], ['id'],
            ondelete='CASCADE'
        )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_2f',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('confirmation_2F_code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('expired_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('failed_attempts', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('auth_2f_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_2f_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('auth_2f_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###